version: '3.8'

services:
  # Database services
  postgres-user:
    image: postgres:14
    environment:
      POSTGRES_DB: userdb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5431:5432"
    volumes:
      - postgres_user_data:/var/lib/postgresql/data

  postgres-order:
    image: postgres:14
    environment:
      POSTGRES_DB: orderdb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_order_data:/var/lib/postgresql/data

  postgres-inventory:
    image: postgres:14
    environment:
      POSTGRES_DB: inventorydb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5433:5432"
    volumes:
      - postgres_inventory_data:/var/lib/postgresql/data

  postgres-payment:
    image: postgres:14
    environment:
      POSTGRES_DB: paymentdb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5434:5432"
    volumes:
      - postgres_payment_data:/var/lib/postgresql/data

  postgres-notification:
    image: postgres:14
    environment:
      POSTGRES_DB: notificationdb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5435:5432"
    volumes:
      - postgres_notification_data:/var/lib/postgresql/data

  # Redis for caching
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  # Kafka for messaging
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  # JMS for payment service
  activemq:
    image: rmohr/activemq:5.15.9
    ports:
      - "61616:61616"
      - "8161:8161"

  # Microservices
  gateway-service:
    build: ./gateway-service
    ports:
      - "8080:8080"
    depends_on:
      - kafka
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  user-service:
    build: ./user-service
    ports:
      - "8081:8081"
    depends_on:
      - postgres-user
      - kafka
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-user:5432/userdb

  order-service:
    build: ./order-service
    ports:
      - "8082:8082"
    depends_on:
      - postgres-order
      - kafka
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-order:5432/orderdb

  inventory-service:
    build: ./inventory-service
    ports:
      - "8083:8083"
    depends_on:
      - postgres-inventory
      - kafka
      - redis
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-inventory:5432/inventorydb
      - SPRING_REDIS_HOST=redis

  payment-service:
    build: ./payment-service
    ports:
      - "8084:8084"
    depends_on:
      - postgres-payment
      - activemq
      - kafka
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-payment:5432/paymentdb
      - SPRING_ACTIVEMQ_BROKER-URL=tcp://activemq:61616

  notification-service:
    build: ./notification-service
    ports:
      - "8085:8085"
    depends_on:
      - postgres-notification
      - kafka
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-notification:5432/notificationdb

  stream-processor:
    build: ./stream-processor
    ports:
      - "8086:8086"
    depends_on:
      - kafka
    environment:
      - SPRING_PROFILES_ACTIVE=docker

volumes:
  postgres_user_data:
  postgres_order_data:
  postgres_inventory_data:
  postgres_payment_data:
  postgres_notification_data:
  redis_data: